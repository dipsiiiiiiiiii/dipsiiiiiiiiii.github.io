<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by DIPSI]]></title><description><![CDATA[하루하루 성장하고 있는 예비 개발자]]></description><link>https://kani-kim.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 05 Oct 2019 06:00:35 GMT</lastBuildDate><item><title><![CDATA[블로그 관리를 위한 Git 기본 / github]]></title><description><![CDATA[개발자라면 알아야 할 git과 github에 대해 알아보자]]></description><link>https://kani-kim.github.io/posts/basic-of-git/</link><guid isPermaLink="false">https://kani-kim.github.io/posts/basic-of-git/</guid><pubDate>Fri, 04 Oct 2019 22:40:32 GMT</pubDate><content:encoded>&lt;h2 id=&quot;git은-쉽게-파일을-관리하기-위한-명령어다&quot;&gt;&lt;a href=&quot;#git%EC%9D%80-%EC%89%BD%EA%B2%8C-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%8B%A4&quot; aria-label=&quot;git은 쉽게 파일을 관리하기 위한 명령어다 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;git은 쉽게 파일을 관리하기 위한 명령어다.&lt;/h2&gt;
&lt;h3 id=&quot;1-blog-설치&quot;&gt;&lt;a href=&quot;#1-blog-%EC%84%A4%EC%B9%98&quot; aria-label=&quot;1 blog 설치 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. blog 설치&lt;/h3&gt;
&lt;p&gt;blog를 처음부터 하나하나 만드는 데는 시간이 한참 걸리기 때문에 블로그를 만들어 주는 site generator를 쓴다.&lt;br&gt;
여기서는 Gatsby를 쓸 것이다.&lt;/p&gt;
&lt;p&gt;Gatsby로 블로그를 쓰기로 했기 때문에 Gatsby 명령어를 설치한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  npm install -g gatsby-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서 npm은 &lt;em&gt;node package manager&lt;/em&gt; 약자다.&lt;/p&gt;
&lt;p&gt;npm에 대한 개념이 모호해서 검색해봤다.&lt;/p&gt;
&lt;p&gt;package는 어플리케이션, 소프트웨어와 비슷한 개념이다.&lt;br&gt;
스마트폰에서 앱스토어나 구글플레이를 통해 어플을 검색하고 설치하거나 업데이트하고 삭제하는 것처럼 개발자도 소프트웨어를 설치, 삭제 하는 곳이 필요한데 npm이 바로 그 파일들을 모아놓은 저장소라고 생각하면 된다. &lt;/p&gt;
&lt;p&gt;Gatsby 명령어를 설치했으므로 Gatsby에서 원하는 테마의 source code를 가져와야 한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
gatsby new blog  https://github.com/alxshelepenok/gatsby-starter-lumen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;잘 설치됐는지 확인하려면 blog로 이동해서 파일을 화인하면 된다.&lt;/p&gt;
&lt;p&gt;여기서 디렉토리 이동 문법은  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd 디렉토리이름/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;그리고 안의 파일 확인 하려면 ls&lt;br&gt;
현재 경로를 알고 싶을 때는 pwd&lt;/p&gt;
&lt;h3 id=&quot;2-서버-생성&quot;&gt;&lt;a href=&quot;#2-%EC%84%9C%EB%B2%84-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;2 서버 생성 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 서버 생성&lt;/h3&gt;
&lt;p&gt;이제는 블로그를 실시간으로 점검하기 위해서는 서버가 필요하다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm run develop&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;DONE Compiled successfully 라고 뜨면 성공!&lt;br&gt;
localhost:8000 으로 접속하면 위에서 골랐던 blog 테마가 나온다! &lt;strong&gt;성공!!&lt;/strong&gt;&lt;br&gt;
내 컴퓨터에서 이 터미널 창을 통해 서버 하나를 생성한 것이므로&lt;br&gt;
이 창을 끄면 &lt;em&gt;페이지가 열리지 않는다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;서버를 멈추고 싶으면 띄어놓은 터미널 창에서 Ctrl + C  &lt;/p&gt;
&lt;h3 id=&quot;3-블로그-세팅-수정&quot;&gt;&lt;a href=&quot;#3-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%84%B8%ED%8C%85-%EC%88%98%EC%A0%95&quot; aria-label=&quot;3 블로그 세팅 수정 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 블로그 세팅 수정&lt;/h3&gt;
&lt;p&gt;블로그 세팅을 몇 가지 수정해야 한다.&lt;br&gt;
config.js 파일을 찾아서 title, author 등 정보를 수정하면 된다.&lt;/p&gt;
&lt;p&gt;이유는 잘 모르겠지만 메인페이지에서는 저장하면서 실시간으로 바뀌고 있지는 않다.&lt;br&gt;
하지만 블로그 글은 실시간으로 수정 가능하다.&lt;br&gt;
현재 그렇게 바뀌는 걸 실시간으로 확인하면서 수정하고 있다.&lt;/p&gt;
&lt;p&gt;그리고 package.json 파일을 찾아서 “script” 아래 부분의 “deploy”를 아래와 같이 바꿔준다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&quot;deploy&quot;: &quot;yarn run clean &amp;&amp; gatsby build &amp;&amp; gh-pages -d public -b master&quot;,&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이렇게 세팅을 수정하고 &lt;code&gt;npm run deploy&lt;/code&gt;를 하게 되면 github에 내 소스코드를 보내게 된다.&lt;/p&gt;
&lt;h3 id=&quot;4-github-repo-생성&quot;&gt;&lt;a href=&quot;#4-github-repo-%EC%83%9D%EC%84%B1&quot; aria-label=&quot;4 github repo 생성 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. github repo 생성&lt;/h3&gt;
&lt;p&gt;이렇게 만든 blog를 세상 앞에 선보일 시간이다.&lt;br&gt;
개발자 언어로는 &lt;strong&gt;deploy&lt;/strong&gt; 또는 &lt;strong&gt;배포&lt;/strong&gt;라고 한다.  &lt;/p&gt;
&lt;p&gt;나만의 블로그를 위해서는 도메인을 따로 구입해야 하지만&lt;br&gt;
정말 감사하게도 github에서 도메인을 제공해준다.&lt;br&gt;
그걸 사용하는 방법을 알아보자.&lt;/p&gt;
&lt;p&gt;먼저 github 사이트에 들어가서 repository, 즉, 저장소를 만들어야 한다.&lt;br&gt;
이 때 주소를 username.github.io 라고 입력해야 한다.&lt;br&gt;
username에는 가입했을 때의 username을 적으면 된다.&lt;/p&gt;
&lt;h3 id=&quot;5-github-연결하기&quot;&gt;&lt;a href=&quot;#5-github-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0&quot; aria-label=&quot;5 github 연결하기 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. github 연결하기&lt;/h3&gt;
&lt;p&gt;저장소도 만들었으니 열심히 만든 블로그를 저장소에 보내는 일만 남았다.&lt;br&gt;
소스코드를 github로 보내려면 내 컴퓨터에 있는 blog파일과 github를 연결해야 한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/pre&gt;  
&lt;pre&gt;&lt;code&gt;git remote add origin https://github.com/username/username.github.io.git&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위의 username부분을 본인의 username으로 바꿔주고 실행한다.&lt;br&gt;
여기서 origin은 github를 의미한다.&lt;br&gt;
아무런 반응이 일어나지 않으므로 잘 연결 됐는지 확인해야 한다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git remote -v&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이렇게 한 번 연결해두면 다음 번에 수정해서 배포할 때는 이 연결 과정을 거치지 않아도 된다.&lt;/p&gt;
&lt;h3 id=&quot;6-배포하기&quot;&gt;&lt;a href=&quot;#6-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0&quot; aria-label=&quot;6 배포하기 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. 배포하기&lt;/h3&gt;
&lt;p&gt;github와 연결 했으니 이제 보낼 일만 남았다.&lt;br&gt;
코드를 보내는 것을 개발자 언어로 &lt;strong&gt;push&lt;/strong&gt;라고 한다.&lt;/p&gt;
&lt;p&gt;push 해보자.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .&lt;/pre&gt;&lt;/code&gt;
&lt;pre&gt;&lt;code&gt;git commit -m &quot;적을 메세지&quot;&lt;/pre&gt;&lt;/code&gt;
&lt;pre&gt;&lt;code&gt;git push origin master&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;여기까지 하고 github로 가서 소스코드가 잘 올라왔는지 확인한다.&lt;br&gt;
잘 됐으면 배포 명령어를 실행할 때다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm run deploy&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;github를 가서 확인해보면 md 파일이 모두 html, js로 자동변환돼서 올라가 있다.  &lt;/p&gt;
&lt;p&gt;현재는 master branch에 push를 하고 있지만 개발코드를 따로 보관하기 위해서&lt;br&gt;
branch 하나를 더 만들기로 하자.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch develop&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;git checkout develop&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;첫 번째는 develop이라는 이름을 가진 branch를 만드는 명령어이고&lt;br&gt;
두 번째는 develop이라는 이름을 가진 branch를 사용하겠다고 지정하는 명령어이다.&lt;br&gt;
그리고 새로 지정한 develop branch에서 push를 해보자.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add .&lt;/pre&gt;&lt;/code&gt;
&lt;pre&gt;&lt;code&gt;git commit -m &quot;적을 메세지&quot;&lt;/pre&gt;&lt;/code&gt;
&lt;pre&gt;&lt;code&gt;git push -u origin develop&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;앞으로 계속 develop branch에 push하기 위해&lt;br&gt;
github에 들어가서 해당 블로그의 repo의 setting에서&lt;br&gt;
branch default 값을 master에서 develop으로 바꿔준다!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[HTML/CSS를 이용한 Layout]]></title><description><![CDATA[An Essay on Typography by Eric Gill takes the reader back to the year 1930. The year when a conflict between two worlds came to its term. The machines of the industrial world finally took over the handicrafts.]]></description><link>https://kani-kim.github.io/posts/humane-typography-in-the-digital-age/</link><guid isPermaLink="false">https://kani-kim.github.io/posts/humane-typography-in-the-digital-age/</guid><pubDate>Sat, 19 Aug 2017 22:40:32 GMT</pubDate><content:encoded>&lt;h1 id=&quot;1-position&quot;&gt;&lt;a href=&quot;#1-position&quot; aria-label=&quot;1 position permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Position&lt;/h1&gt;
&lt;p&gt;브라우저 내에서의 엘리먼트들의 위치를 선정할 수 있다.(Layout)&lt;br&gt;
Static, Relative, Absolute, Fixed 4가지가 있다.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Static : default값(static이라고 써주지 않아도 된다)&lt;br&gt;
엘리먼트가 차례대로 왼쪽에서 오른쪽, 위에서 아래로 쌓인다.&lt;/li&gt;
&lt;li&gt;Relative : Static 상태 기준으로 상하좌우로 위치 조절 가능(property : top, right, bottom, left)&lt;br&gt;
+값 : 내부 영역방향으로 이동&lt;br&gt;
-값 : 외부 영역방향으로 이동&lt;br&gt;
별도의 property값을 주지 않으면 static과 같다.&lt;br&gt;
※ body태그 이외에 어디에 상속되지 않은 상태로 relative값을 받으면 화면 전체를 기준으로 움직이더라.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>